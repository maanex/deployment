version: "3.3"

services:
  traefik:
    image: traefik:2.6
    networks:
      - proxy
    ports:
      - 80:80     # web main
      - 443:443     # https
      # - 2053:2053     # https
      - 8082:8082 # traefik metrics
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/traefik.yml:ro
      - traefik-public-certificates:/certificates
    secrets:
      - CF_DNS_API_TOKEN
    environment:
      CF_DNS_API_TOKEN_FILE: /run/secrets/CF_DNS_API_TOKEN
      PUID: 1002
      PGID: 1002
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 10s
      labels:
        traefik.enable: "true"
        traefik.docker.network: proxy
        traefik.http.services.traefik-api.loadbalancer.server.port: 8080
        traefik.http.routers.traefik-api.service: api@internal
        traefik.http.routers.traefik-api.entrypoints: https
        traefik.http.routers.traefik-api.rule: Host(`traefik-coyote.tude.network`)
        traefik.http.routers.traefik-api.tls.certresolver: cloudflare
        traefik.http.routers.traefik-api.tls.domains[0].main: traefik-coyote.tude.network

  whoami:
    image: traefik/whoami
    restart: always
    networks:
      - proxy
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.docker.network=proxy
        - traefik.http.services.whoami.loadbalancer.server.port=80
        - traefik.http.routers.whoami.entrypoints=https
        - traefik.http.routers.whoami.rule=Host(`whoami.tude.network`)
        - traefik.http.routers.whoami.tls.certresolver=cloudflare
        - traefik.http.routers.whoami.tls.domains[0].main=whoami.tude.network


networks:
  proxy:
    external: true

secrets:
  CF_DNS_API_TOKEN:
    external: true

volumes:
  traefik-public-certificates: {}

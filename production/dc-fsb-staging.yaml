version: "3.3"

services:
  stage_rabbitmq:
    image: rabbitmq:3.8
    hostname: rabbit
    networks:
      - fsn_discord
      - fsn_publisher
    deploy:
      placement:
        constraints:
          - node.hostname == co1

  stage_api:
    image: ghcr.io/freestuffbot/fsb-api:staging
    environment:
      NODE_ENV: "production"
      FSB_API_PORT: "80"
      FSB_API_REDIS_URL: ""
      FSB_API_RABBIT_URL: "amqp://stage_rabbitmq"
      FSB_API_DASH_CORS_ORIGIN: "https://dashboard.freestuffbot.xyz"
      FSB_API_DASH_OAUTH_CALLBACK_URL: "https://dashboard.freestuffbot.xyz/oauth/callback"
      FSB_NETWORK_THUMBNAILER: "http://stage_thumbnailer"
      FSB_NETWORK_MANAGER: "http://stage_manager"
      FSB_NETWORK_LINK_PROXY: "http://stage_link_proxy"
      FSB_NETWORK_UMI_ALLOWED_IP_RANGE: "10.0.0.0/16"
      FSB_API_PRIVATE_KEY_URI: "/run/secrets/FSB_API_PRIVATE_KEY"
    networks:
      - metrics
      - proxy
      - fsn_core
      - fsn_discord
      - fsn_publisher
    secrets:
      - FSB_API_MONGO_URL_STAGING
      - FSB_API_OAUTH_DISCORD_APPID_STAGING
      - FSB_API_OAUTH_DISCORD_APPSECRET_STAGING
      - FSB_API_PRIVATE_KEY
      - FSB_API_AUDITLOG_DEST_DISCORD
      - FSB_API_NOTIFICATIONS_DEST_DISCORD
      - FSB_API_DISCORD_HELPER_AUTH_TOKEN_STAGING
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 30s
      labels:
        - xyz.freestuffbot.service.role=api
        - prometheus-job=fsb
        - traefik.enable=true
        - traefik.docker.network=proxy
        - traefik.http.services.fsb-api.loadbalancer.server.port=80
        - traefik.http.routers.fsb-api.entrypoints=https
        - traefik.http.routers.fsb-api.rule=Host(`staging-api.freestuffbot.xyz`)
        - traefik.http.routers.fsb-api.tls.certresolver=cloudflare
        - traefik.http.routers.fsb-api.tls.domains[0].main=staging-api.freestuffbot.xyz

  stage_manager:
    image: ghcr.io/freestuffbot/fsb-manager:staging
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      NODE_ENV: "production"
      FSB_MANAGER_PORT: "80"
    networks:
      - fsn_core
      - fsn_discord
    secrets:
      - FSB_MANAGER_MONGO_URL_STAGING
    deploy:
      mode: replicated
      placement:
        constraints:
          - node.hostname == co1
      replicas: 1
      update_config:
        parallelism: 1
        delay: 30s
      labels:
        - xyz.freestuffbot.service.role=manager
        - prometheus-job=fsb

  stage_discord_interactions:
    image: ghcr.io/freestuffbot/fsb-discord-interactions:staging
    environment:
      NODE_ENV: "production"
      FSB_DISCORD_INTERACTIONS_PORT: "80"
      FSB_DISCORD_INTERACTIONS_RABBIT_URL: "amqp://stage_rabbitmq"
      FSB_NETWORK_UMI_ALLOWED_IP_RANGE: "10.0.0.0/16"
      FSB_NETWORK_DISCORD_GATEWAY: "http://stage_discord_gateway"
      FSB_DISCORD_INTERACTIONS_FREESTUFF_API_URL: "http://stage_api"
      FSB_DISCORD_INTERACTIONS_CLIENTID: "1099268793127161948"
      FSB_DISCORD_INTERACTIONS_PUBKEY: "803b6a7fe1b2550e970cf005d7c2ae81801e84bad11e499cd404f9383367987a"
    networks:
      - metrics
      - proxy
      - fsn_discord
    secrets:
      - FSB_DISCORD_INTERACTIONS_MONGO_URL_STAGING
      - FSB_DISCORD_INTERACTIONS_FREESTUFF_API_KEY_STAGING
    depends_on:
      - api
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 30s
      labels:
        - xyz.freestuffbot.service.role=discord-interactions
        - prometheus-job=fsb
        - traefik.enable=true
        - traefik.docker.network=proxy
        - traefik.http.services.fsb-discord-interactions-staging.loadbalancer.server.port=80
        - traefik.http.routers.fsb-discord-interactions-staging.entrypoints=https
        - traefik.http.routers.fsb-discord-interactions-staging.rule=Host(`staging-inbound-discord--net.freestuffbot.xyz`)
        - traefik.http.routers.fsb-discord-interactions-staging.tls.certresolver=cloudflare
        - traefik.http.routers.fsb-discord-interactions-staging.tls.domains[0].main=staging-inbound-discord--net.freestuffbot.xyz

  stage_discord_gateway:
    image: ghcr.io/freestuffbot/fsb-discord-gateway:staging
    environment:
      NODE_ENV: "production"
      FSB_DISCORD_GATEWAY_PORT: "80"
      FSB_NETWORK_UMI_ALLOWED_IP_RANGE: "10.0.0.0/16"
    networks:
      - metrics
      - fsn_discord
    secrets:
      - FSB_DISCORD_GATEWAY_API_TOKEN_STAGING
      - FSB_DISCORD_GATEWAY_API_USER_STAGING
    depends_on:
      - api
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.hostname == co1
      update_config:
        parallelism: 1
        delay: 30s
      labels:
        - xyz.freestuffbot.service.role=discord-gateway
        - prometheus-job=fsb

  stage_discord_publisher:
    image: ghcr.io/freestuffbot/fsb-discord-publisher:staging
    environment:
      NODE_ENV: "production"
      FSB_DISCORD_PUBLISHER_RABBIT_URL: "amqp://stage_rabbitmq"
      FSB_DISCORD_PUBLISHER_FREESTUFF_API_URL: "http://stage_api"
      FSB_NETWORK_UMI_ALLOWED_IP_RANGE: "10.0.0.0/16"
    networks:
      - metrics
      - fsn_publisher
    secrets:
      - FSB_DISCORD_PUBLISHER_MONGO_URL_STAGING
      - FSB_DISCORD_PUBLISHER_FREESTUFF_API_KEY_STAGING
    depends_on:
      - api
    deploy:
      mode: global
      placement:
        constraints:
          - node.hostname != coyote
      update_config:
        parallelism: 1
        delay: 30s
      labels:
        - xyz.freestuffbot.service.role=discord-publisher
        - prometheus-job=fsb

  stage_app_publisher:
    image: ghcr.io/freestuffbot/fsb-app-publisher:staging
    environment:
      NODE_ENV: "production"
      FSB_APP_PUBLISHER_RABBIT_URL: "amqp://stage_rabbitmq"
      FSB_APP_PUBLISHER_FREESTUFF_API_URL: "http://stage_api"
      FSB_NETWORK_UMI_ALLOWED_IP_RANGE: "10.0.0.0/16"
    depends_on:
      - api
    networks:
      - metrics
      - fsn_publisher
    secrets:
      - FSB_APP_PUBLISHER_MONGO_URL_STAGING
      - FSB_APP_PUBLISHER_FREESTUFF_API_KEY_STAGING
      - FSB_APP_PUBLISHER_UPSTREAM_URL_STAGING
      - FSB_APP_PUBLISHER_UPSTREAM_AUTH_STAGING
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 30s
      labels:
        - xyz.freestuffbot.service.role=app-publisher
        - prometheus-job=fsb

  # telegram_publisher:
  #   image: ghcr.io/freestuffbot/fsb-telegram-publisher:staging
  #   environment:
  #     NODE_ENV: "production"
  #     FSB_NODE_ENV: "production"
  #     FSB_TELEGRAM_PUBLISHER_PORT: "80"
  #     FSB_TELEGRAM_PUBLISHER_RABBIT_URL: "amqp://stage_rabbitmq"
  #     FSB_TELEGRAM_PUBLISHER_FREESTUFF_API_URL: "http://stage_api"
  #     FSB_NETWORK_UMI_ALLOWED_IP_RANGE: "10.0.0.0/16"
  #   depends_on:
  #     - api
  #   networks:
  #     - metrics
  #     - fsn_publisher
  #   secrets:
  #     - FSB_TELEGRAM_PUBLISHER_FREESTUFF_API_KEY
  #     - FSB_TELEGRAM_PUBLISHER_TELEGRAM_BOT_TOKEN
  #   deploy:
  #     mode: replicated
  #     replicas: 1
  #     update_config:
  #       parallelism: 1
  #       delay: 30s
  #     labels:
  #       - xyz.freestuffbot.service.role=telegram-publisher
  #       - prometheus-job=fsb

  stage_thumbnailer:
    image: ghcr.io/freestuffbot/fsb-thumbnailer:staging
    environment:
      NODE_ENV: "production"
      FSB_THUMBNAILER_PORT: "80"
      FSB_THUMBNAILER_DISCORD_CDN_CHANNEL: "1066018140129079296"
      FSB_NETWORK_UMI_ALLOWED_IP_RANGE: "10.0.0.0/16"
    networks:
      - metrics
      - fsn_tools
    secrets:
      - FSB_THUMBNAILER_DISCORD_TOKEN_STAGING
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 30s
      labels:
        - xyz.freestuffbot.service.role=thumbnailer
        - prometheus-job=fsb

  stage_link_proxy:
    image: ghcr.io/freestuffbot/fsb-link-proxy:staging
    environment:
      NODE_ENV: "production"
      FSB_LINK_PROXY_PORT: "80"
      FSB_NETWORK_UMI_ALLOWED_IP_RANGE: "10.0.0.0/16"
    networks:
      - metrics
      - fsn_tools
    secrets:
      - FSB_LINK_PROXY_MONGO_URL_STAGING
      - FSB_LINK_PROXY_FIREBASE_API_KEY
      - FSB_LINK_PROXY_FIREBASE_SERVICE_ACCOUNT_KEY
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 30s
      labels:
        - xyz.freestuffbot.service.role=link-proxy
        - prometheus-job=fsb

networks:
  # access to "external" services
  metrics:
    external: true
  proxy:
    external: true
  # freestuff network -> internal communication
  fsn_core:
    driver: overlay
  fsn_tools:
    driver: overlay
  fsn_discord:
    driver: overlay
  fsn_publisher:
    driver: overlay

secrets:
  # API
  FSB_API_MONGO_URL_STAGING:
    external: true
  FSB_API_OAUTH_DISCORD_APPID_STAGING:
    external: true
  FSB_API_OAUTH_DISCORD_APPSECRET_STAGING:
    external: true
  FSB_API_PRIVATE_KEY:
    external: true
  FSB_API_AUDITLOG_DEST_DISCORD:
    external: true
  FSB_API_NOTIFICATIONS_DEST_DISCORD:
    external: true
  FSB_API_DISCORD_HELPER_AUTH_TOKEN_STAGING:
    external: true
  # MANAGER
  FSB_MANAGER_MONGO_URL_STAGING:
    external: true
  # DISCORD INTERACTIONS
  FSB_DISCORD_INTERACTIONS_MONGO_URL_STAGING:
    external: true
  FSB_DISCORD_INTERACTIONS_FREESTUFF_API_KEY_STAGING:
    external: true
  # DISCORD GATEWAY
  FSB_DISCORD_GATEWAY_API_TOKEN_STAGING:
    external: true
  FSB_DISCORD_GATEWAY_API_USER_STAGING:
    external: true
  # DISCORD PUBLISHER
  FSB_DISCORD_PUBLISHER_MONGO_URL_STAGING:
    external: true
  FSB_DISCORD_PUBLISHER_FREESTUFF_API_KEY_STAGING:
    external: true
  # APP PUBLISHER
  FSB_APP_PUBLISHER_MONGO_URL_STAGING:
    external: true
  FSB_APP_PUBLISHER_FREESTUFF_API_KEY_STAGING:
    external: true
  FSB_APP_PUBLISHER_UPSTREAM_URL_STAGING:
    external: true
  FSB_APP_PUBLISHER_UPSTREAM_AUTH_STAGING:
    external: true
  # TELEGRAM PUBLISHER
#  FSB_TELEGRAM_PUBLISHER_FREESTUFF_API_KEY:
#    external: true
#  FSB_TELEGRAM_PUBLISHER_TELEGRAM_BOT_TOKEN:
#    external: true
  # THUMBNAILER
  FSB_THUMBNAILER_DISCORD_TOKEN_STAGING:
    external: true
  # LINK PROXY
  FSB_LINK_PROXY_MONGO_URL_STAGING:
    external: true
  FSB_LINK_PROXY_FIREBASE_API_KEY:
    external: true
  FSB_LINK_PROXY_FIREBASE_SERVICE_ACCOUNT_KEY:
    external: true
